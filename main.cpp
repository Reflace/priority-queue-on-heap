/*
Задание:
Реализовать шаблон классов очередь с приоритетами. Элементы очереди организовать
в виде пирамиды. В шаблоне классов использовать алгоритмы STL для работы с 
пирамидами. Реализовать модульное тестирование методов и дружественных функций 
шаблона классов с помощью создания тестирующего проекта. Создать клиентское 
приложение и продемонстрировать работу библиотеки для очереди с приоритетами, 
в которой элементами являются объекты класса (созданного в практическом занятии 
«Обобщенный алгоритм сортировки Шелла».).

Класс:
а) класс прямоугольный параллелепипед (элементы-данные: длины трёх рёбер, 
имеющих общую вершину);
б) сравниваются объёмы параллелепипедов.
*/

#include <iostream>
#include "Parallelepiped.hpp"
#include "PriorityQueue.hpp"

using namespace std;

int main() {
    PriorityQueue<Parallelepiped> pq;
    Parallelepiped A(2, 2, 5), B(4, 1, 5), C(5, 8, 10), D(1, 1, 2);
    cout << "Size: " << pq.size() << std::endl;
    pq.push(A);
    pq.push(B);
    pq.push(C);
    pq.push(D);
    cout << "Size: " << pq.size() << std::endl;
    cout << pq.pop() << endl;
    cout << pq.pop() << endl;
    cout << pq.pop() << endl;
    cout << pq.pop() << endl;
    cout << "Size: " << pq.size() << std::endl;
    return 0;
}